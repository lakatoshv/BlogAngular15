{"version":3,"file":"angular-token.umd.js.map","sources":["ng://angular-token/lib/angular-token.token.ts","ng://angular-token/lib/angular-token.service.ts","ng://angular-token/lib/angular-token.interceptor.ts","ng://angular-token/lib/angular-token.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const ANGULAR_TOKEN_OPTIONS = new InjectionToken('ANGULAR_TOKEN_OPTIONS');\n","import { Injectable, Optional, Inject, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, Router, CanActivate } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, fromEvent, interval } from 'rxjs';\nimport { pluck, filter, share, finalize } from 'rxjs/operators';\n\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nimport {\n  SignInData,\n  RegisterData,\n  UpdatePasswordData,\n  ResetPasswordData,\n\n  UserType,\n  UserData,\n  AuthData,\n\n  AngularTokenOptions\n} from './angular-token.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularTokenService implements CanActivate {\n\n  get currentUserType(): string {\n    if (this.userType != null) {\n      return this.userType.name;\n    } else {\n      return undefined;\n    }\n  }\n\n  get currentUserData(): UserData {\n    return this.userData;\n  }\n\n  get currentAuthData(): AuthData {\n    return this.authData;\n  }\n\n  get apiBase(): string {\n    return this.options.apiBase;\n  }\n\n  get tokenOptions(): AngularTokenOptions {\n    return this.options;\n  }\n\n  set tokenOptions(options: AngularTokenOptions) {\n    this.options = (<any>Object).assign(this.options, options);\n  }\n\n  private options: AngularTokenOptions;\n  private userType: UserType;\n  private authData: AuthData;\n  private userData: UserData;\n  private global: Window | any;\n\n  private localStorage: Storage | any = {};\n\n  constructor(\n    private http: HttpClient,\n    @Inject(ANGULAR_TOKEN_OPTIONS) config: any,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private activatedRoute: ActivatedRoute,\n    @Optional() private router: Router\n  ) {\n    this.global = (typeof window !== 'undefined') ? window : {};\n\n    if (isPlatformServer(platformId)) {\n      this.global = {\n        open: () => null,\n        location: {\n          href: '/',\n          origin: '/'\n        }\n      };\n\n      this.localStorage.setItem = () => null;\n      this.localStorage.getItem = () => null;\n      this.localStorage.removeItem = () => null;\n    } else {\n      this.localStorage = localStorage;\n    }\n\n    const defaultOptions: AngularTokenOptions = {\n      apiPath:                    null,\n      apiBase:                    null,\n\n      signInPath:                 'auth/sign_in',\n      signInRedirect:             null,\n      signInStoredUrlStorageKey:  null,\n\n      signOutPath:                'auth/sign_out',\n      validateTokenPath:          'auth/validate_token',\n      signOutFailedValidate:      false,\n\n      registerAccountPath:        'auth',\n      deleteAccountPath:          'auth',\n      registerAccountCallback:    this.global.location.href,\n\n      updatePasswordPath:         'auth',\n\n      resetPasswordPath:          'auth/password',\n      resetPasswordCallback:      this.global.location.href,\n\n      userTypes:                  null,\n      loginField:                 'email',\n\n      oAuthBase:                  this.global.location.origin,\n      oAuthPaths: {\n        github:                   'auth/github'\n      },\n      oAuthCallbackPath:          'oauth_callback',\n      oAuthWindowType:            'newWindow',\n      oAuthWindowOptions:         null,\n    };\n\n    const mergedOptions = (<any>Object).assign(defaultOptions, config);\n    this.options = mergedOptions;\n\n    if (this.options.apiBase === null) {\n      console.warn(`[angular-token] You have not configured 'apiBase', which may result in security issues. ` +\n                   `Please refer to the documentation at https://github.com/neroniaky/angular-token/wiki`);\n    }\n\n    this.tryLoadAuthData();\n  }\n\n  userSignedIn(): boolean {\n      return !!this.authData;\n  }\n\n  canActivate(route, state): boolean {\n    if (this.userSignedIn()) {\n      return true;\n    } else {\n      // Store current location in storage (usefull for redirection after signing in)\n      if (this.options.signInStoredUrlStorageKey) {\n        this.localStorage.setItem(\n          this.options.signInStoredUrlStorageKey,\n          state.url\n        );\n      }\n\n      // Redirect user to sign in if signInRedirect is set\n      if (this.router && this.options.signInRedirect) {\n        this.router.navigate([this.options.signInRedirect]);\n      }\n\n      return false;\n    }\n  }\n\n\n  /**\n   *\n   * Actions\n   *\n   */\n\n  // Register request\n  registerAccount(registerData: RegisterData): Observable<any> {\n\n    registerData = Object.assign({}, registerData);\n\n    if (registerData.userType == null) {\n      this.userType = null;\n    } else {\n      this.userType = this.getUserTypeByName(registerData.userType);\n      delete registerData.userType;\n    }\n\n    if (\n      registerData.password_confirmation == null &&\n      registerData.passwordConfirmation != null\n    ) {\n      registerData.password_confirmation = registerData.passwordConfirmation;\n      delete registerData.passwordConfirmation;\n    }\n\n    const login = registerData.login;\n    delete registerData.login;\n    registerData[this.options.loginField] = login;\n\n    registerData.confirm_success_url = this.options.registerAccountCallback;\n\n    return this.http.post(this.getServerPath() + this.options.registerAccountPath, registerData);\n  }\n\n  // Delete Account\n  deleteAccount(): Observable<any> {\n    return this.http.delete(this.getServerPath() + this.options.deleteAccountPath);\n  }\n\n  // Sign in request and set storage\n  signIn(signInData: SignInData): Observable<any> {\n    this.userType = (signInData.userType == null) ? null : this.getUserTypeByName(signInData.userType);\n\n    const body = {\n      [this.options.loginField]: signInData.login,\n      password: signInData.password\n    };\n\n    const observ = this.http.post(this.getServerPath() + this.options.signInPath, body, { observe: 'response' }).pipe(share());\n\n    observ.subscribe(res => this.userData = res.body['data']);\n\n    return observ;\n  }\n\n  signInOAuth(oAuthType: string) {\n\n    const oAuthPath: string = this.getOAuthPath(oAuthType);\n    const callbackUrl = `${this.global.location.origin}/${this.options.oAuthCallbackPath}`;\n    const oAuthWindowType: string = this.options.oAuthWindowType;\n    const authUrl: string = this.getOAuthUrl(oAuthPath, callbackUrl, oAuthWindowType);\n\n    if (oAuthWindowType === 'newWindow') {\n      const oAuthWindowOptions = this.options.oAuthWindowOptions;\n      let windowOptions = '';\n\n      if (oAuthWindowOptions) {\n        for (const key in oAuthWindowOptions) {\n          if (oAuthWindowOptions.hasOwnProperty(key)) {\n              windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\n          }\n        }\n      }\n\n      const popup = window.open(\n          authUrl,\n          '_blank',\n          `closebuttoncaption=Cancel${windowOptions}`\n      );\n      return this.requestCredentialsViaPostMessage(popup);\n    } else if (oAuthWindowType === 'sameWindow') {\n      this.global.location.href = authUrl;\n    } else {\n      throw new Error(`Unsupported oAuthWindowType \"${oAuthWindowType}\"`);\n    }\n  }\n\n  processOAuthCallback(): void {\n    this.getAuthDataFromParams();\n  }\n\n  // Sign out request and delete storage\n  signOut(): Observable<any> {\n    const observ = this.http.delete<any>(this.getServerPath() + this.options.signOutPath)\n    // Only remove the localStorage and clear the data after the call\n          .pipe(\n            finalize(() => {\n                this.localStorage.removeItem('accessToken');\n                this.localStorage.removeItem('client');\n                this.localStorage.removeItem('expiry');\n                this.localStorage.removeItem('tokenType');\n                this.localStorage.removeItem('uid');\n\n                this.authData = null;\n                this.userType = null;\n                this.userData = null;\n              }\n            )\n          );\n\n    return observ;\n  }\n\n  // Validate token request\n  validateToken(): Observable<any> {\n    const observ = this.http.get(this.getServerPath() + this.options.validateTokenPath).pipe(share());\n\n    observ.subscribe(\n      (res) => this.userData = res['data'],\n      (error) => {\n        if (error.status === 401 && this.options.signOutFailedValidate) {\n          this.signOut();\n        }\n    });\n\n    return observ;\n  }\n\n  // Update password request\n  updatePassword(updatePasswordData: UpdatePasswordData): Observable<any> {\n\n    if (updatePasswordData.userType != null) {\n      this.userType = this.getUserTypeByName(updatePasswordData.userType);\n    }\n\n    let args: any;\n\n    if (updatePasswordData.passwordCurrent == null) {\n      args = {\n        password:               updatePasswordData.password,\n        password_confirmation:  updatePasswordData.passwordConfirmation\n      };\n    } else {\n      args = {\n        current_password:       updatePasswordData.passwordCurrent,\n        password:               updatePasswordData.password,\n        password_confirmation:  updatePasswordData.passwordConfirmation\n      };\n    }\n\n    if (updatePasswordData.resetPasswordToken) {\n      args.reset_password_token = updatePasswordData.resetPasswordToken;\n    }\n\n    const body = args;\n    return this.http.put(this.getServerPath() + this.options.updatePasswordPath, body);\n  }\n\n  // Reset password request\n  resetPassword(resetPasswordData: ResetPasswordData): Observable<any> {\n\n    this.userType = (resetPasswordData.userType == null) ? null : this.getUserTypeByName(resetPasswordData.userType);\n\n    const body = {\n      [this.options.loginField]: resetPasswordData.login,\n      redirect_url: this.options.resetPasswordCallback\n    };\n\n    return this.http.post(this.getServerPath() + this.options.resetPasswordPath, body);\n  }\n\n\n  /**\n   *\n   * Construct Paths / Urls\n   *\n   */\n\n  private getUserPath(): string {\n    return (this.userType == null) ? '' : this.userType.path + '/';\n  }\n\n  private getApiPath(): string {\n    let constructedPath = '';\n\n    if (this.options.apiBase != null) {\n      constructedPath += this.options.apiBase + '/';\n    }\n\n    if (this.options.apiPath != null) {\n      constructedPath += this.options.apiPath + '/';\n    }\n\n    return constructedPath;\n  }\n\n  private getServerPath(): string {\n    return this.getApiPath() + this.getUserPath();\n  }\n\n  private getOAuthPath(oAuthType: string): string {\n    let oAuthPath: string;\n\n    oAuthPath = this.options.oAuthPaths[oAuthType];\n\n    if (oAuthPath == null) {\n      oAuthPath = `/auth/${oAuthType}`;\n    }\n\n    return oAuthPath;\n  }\n\n  private getOAuthUrl(oAuthPath: string, callbackUrl: string, windowType: string): string {\n    let url: string;\n\n    url =   `${this.options.oAuthBase}/${oAuthPath}`;\n    url +=  `?omniauth_window_type=${windowType}`;\n    url +=  `&auth_origin_url=${encodeURIComponent(callbackUrl)}`;\n\n    if (this.userType != null) {\n      url += `&resource_class=${this.userType.name}`;\n    }\n\n    return url;\n  }\n\n\n  /**\n   *\n   * Get Auth Data\n   *\n   */\n\n  // Try to load auth data\n  private tryLoadAuthData(): void {\n\n    const userType = this.getUserTypeByName(this.localStorage.getItem('userType'));\n\n    if (userType) {\n      this.userType = userType;\n    }\n\n    this.getAuthDataFromStorage();\n\n    if (this.activatedRoute) {\n      this.getAuthDataFromParams();\n    }\n\n    // if (this.authData) {\n    //     this.validateToken();\n    // }\n  }\n\n  // Parse Auth data from response\n  public getAuthHeadersFromResponse(data: any): void {\n    const headers = data.headers;\n\n    const authData: AuthData = {\n      accessToken:    headers.get('access-token'),\n      client:         headers.get('client'),\n      expiry:         headers.get('expiry'),\n      tokenType:      headers.get('token-type'),\n      uid:            headers.get('uid')\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Parse Auth data from post message\n  private getAuthDataFromPostMessage(data: any): void {\n    const authData: AuthData = {\n      accessToken:    data['auth_token'],\n      client:         data['client_id'],\n      expiry:         data['expiry'],\n      tokenType:      'Bearer',\n      uid:            data['uid']\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Try to get auth data from storage.\n  public getAuthDataFromStorage(): void {\n\n    const authData: AuthData = {\n      accessToken:    this.localStorage.getItem('accessToken'),\n      client:         this.localStorage.getItem('client'),\n      expiry:         this.localStorage.getItem('expiry'),\n      tokenType:      this.localStorage.getItem('tokenType'),\n      uid:            this.localStorage.getItem('uid')\n    };\n\n    if (this.checkAuthData(authData)) {\n      this.authData = authData;\n    }\n  }\n\n  // Try to get auth data from url parameters.\n  private getAuthDataFromParams(): void {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      const authData: AuthData = {\n        accessToken:    queryParams['token'] || queryParams['auth_token'],\n        client:         queryParams['client_id'],\n        expiry:         queryParams['expiry'],\n        tokenType:      'Bearer',\n        uid:            queryParams['uid']\n      };\n\n      if (this.checkAuthData(authData)) {\n        this.authData = authData;\n      }\n    });\n  }\n\n  /**\n   *\n   * Set Auth Data\n   *\n   */\n\n  // Write auth data to storage\n  private setAuthData(authData: AuthData): void {\n    if (this.checkAuthData(authData)) {\n\n      this.authData = authData;\n\n      this.localStorage.setItem('accessToken', authData.accessToken);\n      this.localStorage.setItem('client', authData.client);\n      this.localStorage.setItem('expiry', authData.expiry);\n      this.localStorage.setItem('tokenType', authData.tokenType);\n      this.localStorage.setItem('uid', authData.uid);\n\n      if (this.userType != null) {\n        this.localStorage.setItem('userType', this.userType.name);\n      }\n\n    }\n  }\n\n\n  /**\n   *\n   * Validate Auth Data\n   *\n   */\n\n  // Check if auth data complete and if response token is newer\n  private checkAuthData(authData: AuthData): boolean {\n\n    if (\n      authData.accessToken != null &&\n      authData.client != null &&\n      authData.expiry != null &&\n      authData.tokenType != null &&\n      authData.uid != null\n    ) {\n      if (this.authData != null) {\n        return authData.expiry >= this.authData.expiry;\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   *\n   * OAuth\n   *\n   */\n\n  private requestCredentialsViaPostMessage(authWindow: any): Observable<any> {\n    const pollerObserv = interval(500);\n\n    const responseObserv = fromEvent(this.global, 'message').pipe(\n      pluck('data'),\n      filter(this.oAuthWindowResponseFilter)\n    );\n\n    const responseSubscription = responseObserv.subscribe(\n      this.getAuthDataFromPostMessage.bind(this)\n    );\n\n    const pollerSubscription = pollerObserv.subscribe(() => {\n      if (authWindow.closed) {\n        pollerSubscription.unsubscribe();\n      } else {\n        authWindow.postMessage('requestCredentials', '*');\n      }\n    });\n\n    return responseObserv;\n  }\n\n  private oAuthWindowResponseFilter(data: any): any {\n    if (data.message === 'deliverCredentials' || data.message === 'authFailure') {\n      return data;\n    }\n  }\n\n\n  /**\n   *\n   * Utilities\n   *\n   */\n\n  // Match user config by user config name\n  private getUserTypeByName(name: string): UserType {\n    if (name == null || this.options.userTypes == null) {\n      return null;\n    }\n\n    return this.options.userTypes.find(\n      userType => userType.name === name\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpInterceptor, HttpHandler, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { AngularTokenOptions } from './angular-token.model';\nimport { AngularTokenService } from './angular-token.service';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AngularTokenInterceptor implements HttpInterceptor {\n  private atOptions: AngularTokenOptions;\n\n  constructor( private tokenService: AngularTokenService ) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    // Get auth data from local storage\n    this.tokenService.getAuthDataFromStorage();\n\n    // Add the headers if the request is going to the configured server\n    if (this.tokenService.currentAuthData && (this.tokenService.apiBase === null || req.url.match(this.tokenService.apiBase))) {\n\n      const headers = {\n        'access-token': this.tokenService.currentAuthData.accessToken,\n        'client':       this.tokenService.currentAuthData.client,\n        'expiry':       this.tokenService.currentAuthData.expiry,\n        'token-type':   this.tokenService.currentAuthData.tokenType,\n        'uid':          this.tokenService.currentAuthData.uid\n      };\n\n      req = req.clone({\n        setHeaders: headers\n      });\n    }\n\n    return next.handle(req).pipe(tap(\n        res => this.handleResponse(res),\n        err => this.handleResponse(err)\n    ));\n  }\n\n\n  // Parse Auth data from response\n  private handleResponse(res: any): void {\n    if (res instanceof HttpResponse || res instanceof HttpErrorResponse) {\n      if (this.tokenService.apiBase === null || (res.url && res.url.match(this.tokenService.apiBase))) {\n        this.tokenService.getAuthHeadersFromResponse(<any>res);\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf, Provider } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AngularTokenOptions } from './angular-token.model';\nimport { AngularTokenService } from './angular-token.service';\nimport { AngularTokenInterceptor } from './angular-token.interceptor';\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nexport * from './angular-token.service';\n\n@NgModule()\nexport class AngularTokenModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: AngularTokenModule) {\n    if (parentModule) {\n      throw new Error('AngularToken is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(options: AngularTokenOptions): ModuleWithProviders {\n    return {\n      ngModule: AngularTokenModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: AngularTokenInterceptor,\n          multi: true\n        },\n        options.angularTokenOptionsProvider ||\n        {\n          provide: ANGULAR_TOKEN_OPTIONS,\n          useValue: options\n        },\n        AngularTokenService\n      ]\n    };\n  }\n}\n"],"names":["InjectionToken","isPlatformServer","share","finalize","interval","fromEvent","pluck","filter","Injectable","HttpClient","Inject","PLATFORM_ID","ActivatedRoute","Optional","Router","tap","HttpResponse","HttpErrorResponse","HTTP_INTERCEPTORS","NgModule","SkipSelf"],"mappings":"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"}
