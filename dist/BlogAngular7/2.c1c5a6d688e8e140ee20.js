(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{JfMc:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var i=[{Id:0,PostId:4,AuthorId:0,Author:null,Content:"Pick the yellow peach that looks like a sunset with its red, orange, and pink coat skin, peel it off with your teeth. Sink them into unripened.",CreatedAt:new Date},{Id:1,PostId:4,AuthorId:0,Author:null,Content:"Pick the yellow peach that looks like a sunset with its red, orange, and pink coat skin, peel it off with your teeth. Sink them into unripened.",CreatedAt:new Date},{Id:2,PostId:4,AuthorId:0,Author:null,Content:"Pick the yellow peach that looks like a sunset with its red, orange, and pink coat skin, peel it off with your teeth. Sink them into unripened.",CreatedAt:new Date},{Id:3,PostId:5,AuthorId:0,Author:null,Content:"Pick the yellow peach that looks like a sunset with its red, orange, and pink coat skin, peel it off with your teeth. Sink them into unripened.",CreatedAt:new Date},{Id:4,PostId:5,AuthorId:0,Author:null,Content:"Pick the yellow peach that looks like a sunset with its red, orange, and pink coat skin, peel it off with your teeth. Sink them into unripened.",CreatedAt:new Date},{Id:5,PostId:1,AuthorId:0,Author:null,Content:"Pick the yellow peach that looks like a sunset with its red, orange, and pink coat skin, peel it off with your teeth. Sink them into unripened.",CreatedAt:new Date}]},L6cF:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var i=[{Id:0,Title:"Building the orbits of celestial bodies using Python1",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ', of which the second moves relative to the first with an arbitrary speed",AuthorId:0,Author:null,Seen:15,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:1,Title:"Building the orbits of celestial bodies using Python2",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:0,Author:null,Seen:0,Likes:0,Dislikes:0,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:2,Title:"Building the orbits of celestial bodies using Python3",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:0,Author:null,Seen:20,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:3,Title:"Building the orbits of celestial bodies using Python4",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:0,Author:null,Seen:0,Likes:0,Dislikes:0,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:4,Title:"Building the orbits of celestial bodies using Python5",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:1,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:5,Title:"Building the orbits of celestial bodies using Python6",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:1,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:6,Title:"Building the orbits of celestial bodies using Python7",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:1,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:7,Title:"Building the orbits of celestial bodies using Python8",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:2,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:8,Title:"Building the orbits of celestial bodies using Python9",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:4,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:9,Title:"Building the orbits of celestial bodies using Python10",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:4,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:10,Title:"Building the orbits of celestial bodies using Python11",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:3,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:11,Title:"Building the orbits of celestial bodies using Python12",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:3,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:12,Title:"Building the orbits of celestial bodies using Python13",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:3,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:13,Title:"Building the orbits of celestial bodies using Python14",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:3,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:14,Title:"Building the orbits of celestial bodies using Python15",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:3,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:15,Title:"Building the orbits of celestial bodies using Python16",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:2,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:16,Title:"Building the orbits of celestial bodies using Python17",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:2,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:17,Title:"Building the orbits of celestial bodies using Python28",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:2,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:18,Title:"Building the orbits of celestial bodies using Python19",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:1,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:19,Title:"Building the orbits of celestial bodies using Python20",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:1,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0},{Id:20,Title:"Building the orbits of celestial bodies using Python21",Description:"To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial).",Content:'To find the trajectories of relative motions in classical mechanics, we use the assumption of absolute time in all reference frames (both inertial and non-inertial). Using this assumption, let us consIder the motion of one and the same point in two different reference frames K and K ", of which the second moves relative to the first with an arbitrary speed',AuthorId:1,Author:null,Seen:0,Likes:10,Dislikes:5,ImageUrl:"https://habrastorage.org/webt/od/ie/1k/odie1kfvgxwkus8qxtmateofkek.png",Tags:"Development under Windows, Mathematics, Astronomy, Algorithms, Python",CommentsCount:0}]},ey9i:function(e,t,n){"use strict";n("pHOW")},pHOW:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var i=n("CcnG"),o=function(){function e(){}return e.prototype.getRoutePeram=function(e,t){return this._getParamValue(e,t.snapshot)},e.prototype._getParamValue=function(e,t){return t?null===e?null:null!==t.paramMap.get(e)?t.paramMap.get(e):this._getParamValue(e,t.parent):null},e.ngInjectableDef=i.Y({factory:function(){return new e},token:e,providedIn:"root"}),e}()},tbE3:function(e,t,n){"use strict";n.d(t,"a",function(){return f}),n.d(t,"b",function(){return p});var i=n("CcnG"),o=n("mrSG"),s=(n("gIcY"),n("Ip0R")),a=function(){return function(){this.onBeforePaste=new i.p,this.onBlur=new i.p,this.onClick=new i.p,this.onContextMenu=new i.p,this.onCopy=new i.p,this.onCut=new i.p,this.onDblclick=new i.p,this.onDrag=new i.p,this.onDragDrop=new i.p,this.onDragEnd=new i.p,this.onDragGesture=new i.p,this.onDragOver=new i.p,this.onDrop=new i.p,this.onFocus=new i.p,this.onFocusIn=new i.p,this.onFocusOut=new i.p,this.onKeyDown=new i.p,this.onKeyPress=new i.p,this.onKeyUp=new i.p,this.onMouseDown=new i.p,this.onMouseEnter=new i.p,this.onMouseLeave=new i.p,this.onMouseMove=new i.p,this.onMouseOut=new i.p,this.onMouseOver=new i.p,this.onMouseUp=new i.p,this.onPaste=new i.p,this.onSelectionChange=new i.p,this.onActivate=new i.p,this.onAddUndo=new i.p,this.onBeforeAddUndo=new i.p,this.onBeforeExecCommand=new i.p,this.onBeforeGetContent=new i.p,this.onBeforeRenderUI=new i.p,this.onBeforeSetContent=new i.p,this.onChange=new i.p,this.onClearUndos=new i.p,this.onDeactivate=new i.p,this.onDirty=new i.p,this.onExecCommand=new i.p,this.onGetContent=new i.p,this.onHide=new i.p,this.onInit=new i.p,this.onLoadContent=new i.p,this.onNodeChange=new i.p,this.onPostProcess=new i.p,this.onPostRender=new i.p,this.onPreInit=new i.p,this.onPreProcess=new i.p,this.onProgressState=new i.p,this.onRedo=new i.p,this.onRemove=new i.p,this.onReset=new i.p,this.onSaveContent=new i.p,this.onSetAttrib=new i.p,this.onObjectResizeStart=new i.p,this.onObjectResized=new i.p,this.onObjectSelected=new i.p,this.onSetContent=new i.p,this.onShow=new i.p,this.onSubmit=new i.p,this.onUndo=new i.p,this.onVisualAid=new i.p}}(),r=["onActivate","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onBeforePaste","onBlur","onChange","onClearUndos","onClick","onContextMenu","onCopy","onCut","onDblclick","onDeactivate","onDirty","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onExecCommand","onFocus","onFocusIn","onFocusOut","onGetContent","onHide","onInit","onKeyDown","onKeyPress","onKeyUp","onLoadContent","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onNodeChange","onObjectResizeStart","onObjectResized","onObjectSelected","onPaste","onPostProcess","onPostRender","onPreProcess","onProgressState","onRedo","onRemove","onReset","onSaveContent","onSelectionChange","onSetAttrib","onSetContent","onShow","onSubmit","onUndo","onVisualAid"],l=0,h=function(e){var t=(new Date).getTime();return e+"_"+Math.floor(1e9*Math.random())+ ++l+String(t)},c=function(e){return void 0!==e&&"textarea"===e.tagName.toLowerCase()},d=function(e){return void 0===e||""===e?[]:Array.isArray(e)?e:e.split(" ")},u=function(){var e="undefined"!=typeof window?window:void 0;return e&&e.tinymce?e.tinymce:null},m=function(){return{listeners:[],scriptId:h("tiny-script"),scriptLoaded:!1}}(),f=function(e){function t(t,n,i){var o=e.call(this)||this;return o.platformId=i,o.element=void 0,o.id="",o.toolbar=null,o.onTouchedCallback=function(){},o.onChangeCallback=function(e){},o.elementRef=t,o.ngZone=n,o.initialise=o.initialise.bind(o),o}return Object(o.c)(t,e),Object.defineProperty(t.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=e,this.editor&&this.editor.initialized&&this.editor.setMode(e?"readonly":"design")},enumerable:!0,configurable:!0}),t.prototype.writeValue=function(e){this.initialValue=e||this.initialValue,e=e||"",this.editor&&this.editor.initialized&&"string"==typeof e&&this.editor.setContent(e)},t.prototype.registerOnChange=function(e){this.onChangeCallback=e},t.prototype.registerOnTouched=function(e){this.onTouchedCallback=e},t.prototype.setDisabledState=function(e){this.editor?this.editor.setMode(e?"readonly":"design"):e&&(this.init=Object(o.a)({},this.init,{readonly:!0}))},t.prototype.ngAfterViewInit=function(){Object(s.s)(this.platformId)&&(this.id=this.id||h("tiny-angular"),this.inline=void 0!==this.inline?"boolean"!=typeof this.inline||this.inline:this.init&&this.init.inline,this.createElement(),null!==u()?this.initialise():this.element&&this.element.ownerDocument&&function(e,t,n,i){e.scriptLoaded?i():(e.listeners.push(i),t.getElementById(e.scriptId)||function(t,n,i,o){var s=n.createElement("script");s.type="application/javascript",s.id=t,s.addEventListener("load",function(){e.listeners.forEach(function(e){return e()}),e.scriptLoaded=!0}),s.src=i,n.head&&n.head.appendChild(s)}(e.scriptId,t,n))}(m,this.element.ownerDocument,"https://cloud.tinymce.com/"+(this.cloudChannel||"stable")+"/tinymce.min.js?apiKey="+(this.apiKey||""),this.initialise))},t.prototype.ngOnDestroy=function(){null!==u()&&u().remove(this.editor)},t.prototype.createElement=function(){this.element=document.createElement(this.inline?"string"==typeof this.tagName?this.tagName:"div":"textarea"),this.element&&(this.element.id=this.id,c(this.element)&&(this.element.style.visibility="hidden"),this.elementRef.nativeElement.appendChild(this.element))},t.prototype.initialise=function(){var e,t,n=this,i=Object(o.a)({},this.init,{target:this.element,inline:this.inline,readonly:this.disabled,plugins:(e=this.init&&this.init.plugins,t=this.plugins,d(e).concat(d(t))),toolbar:this.toolbar||this.init&&this.init.toolbar,setup:function(e){n.editor=e,e.on("init",function(t){n.initEditor(t,e)}),n.init&&"function"==typeof n.init.setup&&n.init.setup(e)}});c(this.element)&&(this.element.style.visibility=""),this.ngZone.runOutsideAngular(function(){u().init(i)})},t.prototype.initEditor=function(e,t){var n=this;"string"==typeof this.initialValue&&this.ngZone.run(function(){return t.setContent(n.initialValue)}),t.on("blur",function(){return n.ngZone.run(function(){return n.onTouchedCallback()})}),t.on("setcontent",function(e){var t=e.content;return"html"===e.format&&t&&n.ngZone.run(function(){return n.onChangeCallback(t)})}),t.on("change keyup undo redo",function(){return n.ngZone.run(function(){return n.onChangeCallback(t.getContent())})}),function(e,t,n){r.forEach(function(i){var o=e[i];o.observers.length>0&&("onInit"===i?e.ngZone.run(function(){return o.emit({event:n,editor:t})}):t.on(i.substring(2),e.ngZone.run(function(){return function(e){return o.emit({event:e,editor:t})}})))})}(this,t,e)},t}(a),p=function(){return function(){}}()}}]);